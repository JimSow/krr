package ca.magenta.krr.fact
 
import ca.magenta.krr.engine.Engine;
import ca.magenta.krr.ruleEngin.CausalityAnalyser;

declare StateNew
	@role( event )
end

declare StateUpdate
	@role( event )
end

declare StateClear
	@role( event )
end



rule "StateNew Check4RootCauseAndDispatch"
salience 1
    when
        sn : StateNew(    )
    then
        CausalityAnalyser.check4RootCauseAndDispatch(sn);

end

rule "StateUpdate Check4RootCauseAndDispatch"
salience 1
    when
        su : StateUpdate(    )
    then
        CausalityAnalyser.check4RootCauseAndDispatch(su);

end

rule "StateClear Check4RootCauseAndDispatch"
salience 1
    when
        sc : StateClear(    )
    then
    
        CausalityAnalyser.check4RootCauseAndDispatch(sc);

end

rule "State ServiceConsumer-ServiceProvider dependency"
salience 0
    when
        consumerState : State( 	
        						isCleared() == false,
        						isConsumerView(),
        						$consumerNodeFqdName : getMostSpecificManagedNode().getFqdName(),
        						$consumerLinkKey : getLinkKey() 			 
        					)
       	providerState : State(	
       							isProviderView(),
        						$consumerNodeFqdName.equals(getMostSpecificManagedNode().getFqdName()),
        						$providerLinkKey : getLinkKey(),
        						areSharingSameCategory(consumerState),
        						consumerState.getCausedBy().equals(getCausedBy()) == false
        					)
        
    then
        providerState.setSameCauseBys(consumerState);
        Engine.logger.debug("Hit for is causedByEquals:" +  consumerState.getCausedBy().equals(providerState.getCausedBy()) + ":[" + $consumerNodeFqdName + " : "+$consumerLinkKey+" ] and [" + $providerLinkKey + "]"  );
        
end 

rule "State ServiceConsumer-ServiceProvider dependency; no more ServiceProvider with same category"
salience 0
    when
        consumerState : State( 	
        						isCleared() == false,
        						isConsumerView(),
        						$consumerNodeFqdName : getMostSpecificManagedNode().getFqdName(),
        						getCausedBy().size() != 0,
        						$consumerLinkKey : getLinkKey() 			 
        					)
       	not State(	
       							isProviderView(),
        						$consumerNodeFqdName.equals(getMostSpecificManagedNode().getFqdName()),
        						areSharingSameCategory(consumerState)
        					)
        
    then
        consumerState.flushCausedBys();
        Engine.logger.debug("Hit ServiceConsumer state with no ServiceProvider with same category:[" + $consumerLinkKey+"]"  );
        
end 




